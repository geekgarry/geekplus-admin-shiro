<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekplus.webapp.tool.generator.mapper.TableMapper">
    <resultMap id="tableInfo" type="com.geekplus.webapp.tool.generator.entity.TableInfo">
        <result property="tableName" column="table_name" />
        <result property="tableComment" column="table_comment" />
        <result property="className"      column="class_name"      />
        <result property="tplCategory"    column="tpl_category"    />
        <result property="packageName"    column="package_name"    />
        <result property="moduleName"     column="module_name"     />
        <result property="businessName"   column="business_name"   />
        <result property="functionName"   column="function_name"   />
        <result property="functionAuthor" column="function_author" />
        <result property="remark"     column="remark"     />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <association property="pkColumn" javaType="com.geekplus.webapp.tool.generator.entity.TableColumnInfo"/>
        <collection property="allColumns" javaType="java.util.List" resultMap="columnList"/>
    </resultMap>

    <resultMap id="columnList" type="com.geekplus.webapp.tool.generator.entity.TableColumnInfo">
        <result property="columnName" column="column_name" />
        <result property="isPk" column="is_pk" />
        <result property="isIncrement" column="is_increment" />
        <result property="isRequired" column="is_required" />
        <result property="columnComment" column="column_comment" />
        <result property="columnType" column="column_type" />
        <result property="sort" column="sort" />
    </resultMap>
<!--    <sql id="selectTableVo">-->
<!--        select table_id, table_name, table_comment, class_name, tpl_category, package_name, module_name, business_name, function_name, function_author, options, create_by, create_time, update_by, update_time, remark from gen_table-->
<!--    </sql>-->

<!--    <select id="selectTableList" parameterType="map" resultType="map">-->
<!--        <include refid="selectTableVo"/>-->
<!--        <where>-->
<!--            <if test="tableName != null and tableName != ''">-->
<!--                AND lower(table_name) like lower(concat('%', #{tableName}, '%'))-->
<!--            </if>-->
<!--            <if test="tableComment != null and tableComment != ''">-->
<!--                AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))-->
<!--            </if>-->
<!--            &lt;!&ndash; 			<if test="beginTime != null and beginTime != ''">开始时间检索 &ndash;&gt;-->
<!--            &lt;!&ndash; 				AND date_format(create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d') &ndash;&gt;-->
<!--            &lt;!&ndash; 			</if> &ndash;&gt;-->
<!--            &lt;!&ndash; 			<if test="endTime != null and endTime != ''">结束时间检索 &ndash;&gt;-->
<!--            &lt;!&ndash; 				AND date_format(create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d') &ndash;&gt;-->
<!--            &lt;!&ndash; 			</if> &ndash;&gt;-->
<!--        </where>-->
<!--    </select>-->

    <select id="listTableName" resultType="string" >
        select TABLE_NAME from information_schema.TABLES
        where TABLE_SCHEMA=(select database()) and table_name NOT LIKE 'qrtz_%' AND table_name NOT LIKE 'gen_%' and table_name NOT LIKE 'tool_%' and table_name NOT LIKE 'sys_%'
    </select>
    <select id="listTable" resultMap="tableInfo" >
        select table_name as table_name,table_comment as table_comment, create_time as create_time, update_time from information_schema.TABLES
        where TABLE_SCHEMA=(select database())
    </select>
<!--    table_comment <![CDATA[ <> ]]> '' 表示该字段为空时不会显示-->
    <select id="selectTableByName" parameterType="String" resultMap="tableInfo">
        select table_name as table_name, table_comment as table_comment, create_time as create_time, update_time from information_schema.tables
        <where>
             table_schema = (select database())
            <if test="tableName!=null and tableName!=''">
               and table_name = (#{tableName})
            </if>
        </where>
    </select>
    <select id="listTableByNames" parameterType="string" resultMap="tableInfo" >
        select table_name as table_name, table_comment as table_comment, create_time as create_time, update_time from information_schema.TABLES
        where table_comment <![CDATA[ <> ]]> ''
        and TABLE_SCHEMA=(select database())
        and table_name in
        <foreach collection="array" item="tableName" open="(" separator="," close=")">
            #{tableName}
        </foreach>
    </select>
    <select id="listColumnTable" parameterType="string" resultMap="columnList" >
        select column_name as column_name, (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' else null end) as is_required, (case when column_key = 'PRI' then '1' else '0' end) as is_pk, ordinal_position as sort, column_comment as column_comment,
        (case when extra = 'auto_increment' then '1' else '0' end) as is_increment, column_type as column_type
        from information_schema.columns
        <where>
             table_schema = (select database())
            <if test="tableName!=null and tableName!=''">
                and table_name = (#{tableName})
            </if>
        </where>
        order by ordinal_position
    </select>
    <select id="selectColumnTableByPk" parameterType="string" resultMap="columnList" >
        select column_name as column_name,
        (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' else null end) as is_required,
        (case when column_key = 'PRI' then '1' else '0' end) as is_pk, ordinal_position as sort, column_comment as column_comment,
        (case when extra = 'auto_increment' then '1' else '0' end) as is_increment, column_type as column_type
        from information_schema.columns
        <where>
             table_schema = (select database()) and COLUMN_KEY='PRI'
            <if test="tableName!=null and tableName!=''">
                and table_name = (#{tableName})
            </if>
        </where>
        order by ordinal_position
    </select>
<!--    <select id="listTableInfo" resultType="map">-->
<!--        select table_name, table_comment, create_time, update_time from information_schema.tables-->
<!--        where table_schema = (select database())-->
<!--        AND table_name NOT LIKE 'qrtz_%' AND table_name NOT LIKE 'gen_%'-->
<!--        <if test="tableName != null and tableName != ''">-->
<!--            AND lower(table_name) like lower(concat('%', #{tableName}, '%'))-->
<!--        </if>-->
<!--        <if test="tableComment != null and tableComment != ''">-->
<!--            AND lower(table_comment) like lower(concat('%', #{tableComment}, '%'))-->
<!--        </if>-->
<!--        <if test="beginTime != null and beginTime != ''">&lt;!&ndash; 开始时间检索 &ndash;&gt;-->
<!--            AND date_format(create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')-->
<!--        </if>-->
<!--        <if test="endTime != null and endTime != ''">&lt;!&ndash; 结束时间检索 &ndash;&gt;-->
<!--            AND date_format(create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')-->
<!--        </if>-->
<!--    </select>-->
</mapper>
